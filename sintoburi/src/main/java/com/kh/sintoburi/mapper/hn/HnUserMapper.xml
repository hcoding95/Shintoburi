<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="com.kh.sintoburi.mapper.hn.HnUserMapper">
  
  <!-- 회원목록 -->
	  <select id="getList" resultType="HnUserDto">
	  	select * from tbl_users
	  </select>

	<!-- 매니저목록 -->
	  <select id="managerList" resultType="HnUserDto">
	  	select * from tbl_users
	  	where grade = '관리자'
	  </select>
  
  <!--  회원페이징처리 -->
 <select id="getListWithPaging" resultType="HnUserDto">
    select *
    from (
        select
            user_id,
            user_name,
            email,
            grade,
            last_login,
            business,
            row_number() over (order by last_login desc) as rn
        from tbl_users
        <where>
           grade not in('관리자', '마스터') 
           <if test="type != null">
                <trim prefix="and (" suffix=")" prefixOverrides="or">
                    <foreach item="type" collection="typeArr" separator="or">
                        <choose>
                            <when test="type == 'I'.toString()">
                                user_id LIKE '%' || #{keyword} || '%'
                            </when>
                            <when test="type == 'E'.toString()">
                                email LIKE '%' || #{keyword} || '%'
                            </when>
                            <when test="type == 'G'.toString()">
                                grade LIKE '%' || #{keyword} || '%'
                            </when>
                            <when test="type == 'B'.toString()">
                                business = #{keyword} and grade != '판매자'
                            </when>
                        </choose>
                    </foreach>
                </trim>
            </if>
        </where>
        order by business desc, last_login desc
    ) subquery
  where rn &gt; (#{pageNum} - 1) * #{amount}
		and rn &lt;= #{pageNum} * #{amount}
</select>

<!-- 게시글 갯수 -->
	<select id="getTotalCount" resultType="int">
		select count(*) from tbl_users
		<where>
			<if test="type != null">
				<trim prefix="(" suffix=")" prefixOverrides="or">
					<foreach item="type" collection="typeArr">
						<trim prefix="or">
							<choose>
                                <when test="type == 'I'.toString()">
                                    user_id like '%' || #{keyword} || '%'
                                </when>
                                <when test="type == 'E'.toString()">
                                    email like '%' || #{keyword} || '%'
                                </when>
                                <when test="type == 'G'.toString()">
                               		 grade LIKE '%' || #{keyword} || '%'
                           		 </when>
                            </choose>
						</trim>
					</foreach>
				</trim>
			</if>
		</where>
	</select> 

<!--  매니저페이징처리 -->
 <select id="managerListPaging" resultType="HnUserDto">
    select *
    from (
        select
            user_id,
            user_name,
            email,
            grade,
            last_login,
            business,
            row_number() over (order by last_login desc) as rn
        from tbl_users
          where grade ='관리자'
        <where>
            <if test="typeArr != null and typeArr.length > 0">
                <trim prefix="(" suffix=")" prefixOverrides="or">
                    <foreach item="type" collection="typeArr" separator="or">
                        <choose>
                            <when test="type == 'I'.toString()">
                                user_id LIKE '%' || #{keyword} || '%'
                            </when>
                            <when test="type == 'E'.toString()">
                                email LIKE '%' || #{keyword} || '%'
                            </when>
                            <when test="type == 'G'.toString()">
                                grade LIKE '%' || #{keyword} || '%'
                            </when>
                        </choose>
                    </foreach>
                </trim>
            </if>
        </where>
    ) subquery
    where rn &gt; (#{pageNum} - 1) * #{amount}
      and rn &lt;= #{pageNum} * #{amount}
    
</select>

<!-- 매니저게시글 갯수 -->
	<select id="managerTotalCount" resultType="int">
		select count(*) from tbl_users
		where grade= '관리자'
		<where>
			<if test="type != null">
				<trim prefix="(" suffix=")" prefixOverrides="or">
					<foreach item="type" collection="typeArr">
						<trim prefix="or">
							<choose>
                                <when test="type == 'I'.toString()">
                                    user_id like '%' || #{keyword} || '%'
                                </when>
                                <when test="type == 'E'.toString()">
                                    email like '%' || #{keyword} || '%'
                                </when>
                                <when test="type == 'G'.toString()">
                               		 grade LIKE '%' || #{keyword} || '%'
                           		 </when>
                            </choose>
						</trim>
					</foreach>
				</trim>
			</if>
		</where>
</select> 
 

<!-- 회원 등급 수정 --> 
    <update id="updateGrade">
        update tbl_users
        set grade = #{grade}
        where user_id = #{user_id}
    </update>
    
    <!-- 등급 처리 완료시 business 1로 업데이트 -->
    <update id="updateBusiness">
    	update tbl_users
    	set business = 1
    	where user_id = #{user_id}
    </update>
  
  <!--  회원 데이터 1개 -->
   <select id="selectById" resultType="HnUserVo">
  	select * from tbl_users
  	where user_id = #{user_id}
  </select>
  
  <!-- 로그인 -->
  <select id="login" resultType="HnUserDto">
		select *
		from tbl_users
		where user_id = #{user_id}
		and user_pw = #{user_pw}
	</select>

	<!-- 회원가입 -->
	<insert id="join">
		insert into tbl_users (user_id, user_pw, user_name,email,address)
		values(#{user_id},#{user_pw}, #{user_name} , #{email},#{address})
	</insert>
	<!-- 아이디저장 -->
	<select id="checkDupId" resultType="int">
		select count(*) from tbl_users
		where user_id = #{user_id}
	</select>
	<!-- 이메일조회 -->
	<select id="getEmailById" resultType="string">
		select user_email from tbl_users
		where user_id = #{user_id}
	</select>
	<!-- 비밀번호변경 -->
	<update id="updatePw">
		update tbl_users set 
			user_pw = #{user_pw}
		where user_id = #{user_id}	
	</update>
  
  <!-- 사업자번호 업데이트 -->
  <update id="updateBusinessNum">
	  update tbl_users set
	business_num = #{business_num}
	where user_id = #{user_id}
  </update>
  
  </mapper>