CREATE TABLE TBL_USER (
    USER_ID VARCHAR2(40) PRIMARY KEY,
    GRADE CHAR(1) DEFAULT 'B' CHECK (GRADE IN ('B','S','M')) NOT NULL,
    USER_PASSWORD VARCHAR2(30) NOT NULL,
    USER_POINT NUMBER(10) DEFAULT 0 ,
    ADDRESS VARCHAR2(300) NOT NULL,
    USER_NAME VARCHAR2(40) NOT NULL
);

CREATE TABLE TBL_BLOG (
BLOG_NO NUMBER(10) PRIMARY KEY,
USER_ID VARCHAR2(40) REFERENCES TBL_USER(USER_ID)ON DELETE CASCADE,
BLOG_CONTENT VARCHAR2(4000),
REGDATE DATE DEFAULT SYSDATE,
USER_NAME VARCHAR2(40),
UPDATEDATE DATE
);

-- 테스트용 계정 생성
insert into tbl_user ( user_id, user_password, address, user_name)
values('user01', '1234', '울산 광역시 남구', '김동동' );
commit;
CREATE TABLE TBL_USER (
	USER_ID VARCHAR2(40) PRIMARY KEY,
	GRADE CHAR(1) DEFAULT 'B' CHECK (GRADE IN ('B','S','M')) NOT NULL,
	USER_PASSWORD VARCHAR2(30) NOT NULL,
	USER_POINT NUMBER(10) DEFAULT 0 ,
	ADDRESS VARCHAR2(300) NOT NULL,
	USER_NAME VARCHAR2(40) NOT NULL,
	USER_PROFILE VARCHAR2(400)
);

CREATE SEQUENCE SEQ_BLOG
START WITH 1
INCREMENT BY 1
NOCACHE;

CREATE TABLE TBL_BLOG_REPLY (
    BLOG_RNO NUMBER(10) PRIMARY KEY,
    BLOG_NO NUMBER(10)REFERENCES TBL_BLOG (BLOG_NO)ON DELETE CASCADE,
    REPLYER VARCHAR2(40) REFERENCES TBL_USER(USER_ID)ON DELETE CASCADE,
    REPLY_CONTENT VARCHAR2(400),
    REGDATE DATE DEFAULT SYSDATE,
    UPDATEDATE DATE
);

CREATE SEQUENCE SEQ_BLOG_REPLY
START WITH 1
INCREMENT BY 1
NOCACHE;

CREATE TABLE TBL_USER_FOLLOW (
    USER_FOLLOWER VARCHAR2(40) REFERENCES TBL_USER(USER_ID) ON DELETE CASCADE,
    USER_FOLLOWING VARCHAR2(40) REFERENCES TBL_USER(USER_ID) ON DELETE CASCADE,
    CONSTRAINT PK_USER_FOLLOW PRIMARY KEY (USER_FOLLOWER, USER_FOLLOWING)
);


CREATE TABLE TBL_BLOG_IMG (
    UUID VARCHAR2(100) PRIMARY KEY,
    BLOG_NO NUMBER(10) REFERENCES TBL_BLOG (BLOG_NO) ON DELETE CASCADE,
    FILE_NAME VARCHAR2(400) NOT NULL,
    FILE_PATH VARCHAR2(400) NOT NULL
);

CREATE TABLE TBL_PROFILE_IMG (
    UUID VARCHAR2(100) PRIMARY KEY,
    USER_ID VARCHAR2(40) REFERENCES TBL_USER(USER_ID)ON DELETE CASCADE,
    FILE_NAME VARCHAR2(400) NOT NULL,
    FILE_PATH VARCHAR2(400) NOT NULL
);


create table TBL_PRODUCT(
    PRODUCT_ID NUMBER(10) PRIMARY KEY,
    PRODUCT_NAME VARCHAR2(100) NOT NULL
);


INSERT INTO TBL_PRODUCT( PRODUCT_ID, PRODUCT_NAME)
VALUES ( 1001, '테스트 상품1');
INSERT INTO TBL_PRODUCT( PRODUCT_ID, PRODUCT_NAME)
VALUES ( 1002, '테스트 상품2');
INSERT INTO TBL_PRODUCT( PRODUCT_ID, PRODUCT_NAME)
VALUES ( 2001, '테스트 상품3');
INSERT INTO TBL_PRODUCT( PRODUCT_ID, PRODUCT_NAME)
VALUES ( 3124, '테스트 상품4');
COMMIT;


Create Table Tbl_Blog_Tag(
    Blog_No Number(10) References Tbl_Blog(Blog_No) ON DELETE CASCADE,
    Product_Id Number(10) References Tbl_Product(Product_Id),
    PRODUCT_NAME VARCHAR2(100) NOT NULL,
    Constraint Pk_Blog_Tag Primary Key (Blog_No, Product_Id)
);

Create Table Tbl_Blog_Like(
    Blog_No Number(10) References Tbl_Blog (Blog_No) On Delete Cascade,
    User_Id Varchar2(40) References Tbl_User(User_Id) On Delete Cascade,
    Constraint Tbl_Blog_Like_Pk Primary Key (Blog_No, User_Id)
    
);

CREATE TABLE tbl_blog_setting (
    user_id VARCHAR2(40) REFERENCES tbl_user(user_id),
    ismain CHAR(1) DEFAULT 'F' CHECK (ismain IN ('T','F')),
    isvisible CHAR(1) DEFAULT 'F'  CHECK (isvisible IN ('T','F')),
    blog_category char(1) DEFAULT 'T' CHECK(blog_category IN ('T', 'M', 'B')),
    config_name VARCHAR2(50),
    config_value VARCHAR2(255),
    blog_priority NUMBER,
    CONSTRAINT pk_blog_setting PRIMARY KEY (user_id, config_name)
);

CREATE TABLE tbl_enquiry (
eno NUMBER PRIMARY KEY, -- 문의사항게시글번호
user_id VARCHAR2(50) NOT NULL, -- 작성아이디
enquiry_type VARCHAR2(50) NOT NULL, -- 문의유형
content VARCHAR2(4000) NOT NULL, -- 내용
status VARCHAR2(20) DEFAULT '미답변', -- 처리상태
write_date DATE DEFAULT SYSDATE, -- 작성날짜
FOREIGN KEY (user_id) REFERENCES tbl_user(user_id)
);
CREATE TABLE tbl_reply (
rno NUMBER PRIMARY KEY, -- 답변게시글번호
eno NUMBER NOT NULL, -- 답변할 게시글번호
user_id VARCHAR2(50) NOT NULL, -- 답변할 게시글작성아이디
reply_content VARCHAR2(4000) NOT NULL, -- 답변내용
reply_date DATE DEFAULT SYSDATE, -- 답변날짜
manager_id VARCHAR2(50) NOT NULL, -- 답변작성아이디
FOREIGN KEY (eno) REFERENCES tbl_enquiry(eno),
FOREIGN KEY (user_id) REFERENCES tbl_user(user_id),
FOREIGN KEY (manager_id) REFERENCES tbl_user(user_id)
);

CREATE TABLE TBL_FAQ (
F_NO NUMBER NOT NULL,              -- FAQ 번호
TITLE VARCHAR2(100 BYTE) NOT NULL,  -- 제목
CONTENT VARCHAR2(4000 BYTE) NOT NULL, -- 내용
WRITE_DATE DATE DEFAULT SYSDATE,     -- 작성 날짜
CONSTRAINT TBL_FAQ_PK PRIMARY KEY (F_NO)  -- 기본 키 제약 조건
);



CREATE TABLE tbl_enquiry_image (
UUID varchar2(100) PRIMARY KEY,
ENO NUMBER ,
image_name VARCHAR2(100) NOT NULL,
UPLOAD_PATH VARCHAR2(100)  NOT NULL,
FOREIGN KEY (eno) REFERENCES tbl_enquiry(eno));

CREATE TABLE TBL_NOTICE_IMAGE
(
UUID VARCHAR2(100 BYTE) NOT NULL,
N_NO NUMBER,
IMAGE_NAME VARCHAR2(100 BYTE) NOT NULL,
UPLOAD_PATH VARCHAR2(100 BYTE) NOT NULL,
CONSTRAINT TBL_NOTICE_IMAGE_PK PRIMARY KEY (UUID),
CONSTRAINT FK_TBL_NOTICE_IMAGE_NOTICE FOREIGN KEY (N_NO) REFERENCES TBL_NOTICE (N_NO)
);

CREATE TABLE TBL_NOTICE
(
N_NO NUMBER NOT NULL,
TITLE VARCHAR2(100 BYTE) NOT NULL,
CONTENT VARCHAR2(4000 BYTE) NOT NULL,
WRITE_DATE DATE DEFAULT SYSDATE,
IMAGE VARCHAR2(200 BYTE),
IMPORTANT CHAR(1 BYTE) DEFAULT 'N',
CONSTRAINT TBL_NOTICE_PK PRIMARY KEY (N_NO));

CREATE TABLE tbl_basket (
bno NUMBER PRIMARY KEY, -- 장바구니 번호
user_id VARCHAR2(50), -- 구매자 ID
CONSTRAINT fk_basket_user_id FOREIGN KEY (user_id) REFERENCES tbl_user(user_id) -- 구매자 ID 외래 키
);

create sequence seq_basket;

create table tbl_basket_detail(
bdno number constraint pk_basket_detail_bdno primary key,--장바구니 상세 번호
product_no NUMBER constraint fk_basket_detail_pno references tbl_product(product_no),-- 상품번호(상품 테이블 외래키)
bno NUMBER constraint fk_basket_detail_bno references tbl_basket(bno), --장바구니번호(장바구니 테이블 외래키)
p_count number check (p_count > 0 ), -- 상품개수
PUT_DATE DATE DEFAULT SYSDATE --담은 날짜
);

create sequence seq_basket_detail;


CREATE TABLE TBL_CATE
(
CATE_NO NUMBER PRIMARY KEY,
CATE_NAME VARCHAR2(100 BYTE) NOT NULL
);

CREATE TABLE TBL_PRODUCT
(
PRODUCT_NO NUMBER PRIMARY KEY,
PRODUCT_NAME VARCHAR2(2000 BYTE) NOT NULL,
DETAILS VARCHAR2(2000 BYTE),
PRICE NUMBER DEFAULT 0,
STOCK NUMBER,
STATUS VARCHAR2(1 BYTE) DEFAULT 'Y',
REG_DATE DATE DEFAULT SYSDATE,
UPD_DATE DATE DEFAULT SYSDATE,
CATE_NO NUMBER,
USER_ID VARCHAR2(40 BYTE),
SUMMARY VARCHAR2(1000 BYTE),
CONSTRAINT FK_PRODUCT_CATE_NO FOREIGN KEY (CATE_NO)
REFERENCES TBL_CATE (CATE_NO),
CONSTRAINT FK_PRODUCT_USER_ID FOREIGN KEY (USER_ID)
REFERENCES TBL_USER (USER_ID)
);

CREATE TABLE TBL_IMG
(
UUID VARCHAR2(100 BYTE) PRIMARY KEY,
IMG_NAME VARCHAR2(500 BYTE) NOT NULL,
IMG_PATH VARCHAR2(500 BYTE) NOT NULL,
PRODUCT_NO NUMBER,
REPRESENT CHAR(1 BYTE) DEFAULT '0',
CONSTRAINT FK_PNO FOREIGN KEY (PRODUCT_NO)
REFERENCES TBL_PRODUCT (PRODUCT_NO) ON DELETE CASCADE
);

CREATE TABLE TBL_REVIEW
(
REVIEW_NO NUMBER PRIMARY KEY,
REVIEW_CONTENT VARCHAR2(2000 BYTE) NOT NULL,
REVIEW_RATING NUMBER DEFAULT 1 NOT NULL,
REVIEW_REG_DATE DATE DEFAULT SYSDATE,
REVIEW_UPD_DATE DATE DEFAULT SYSDATE,
PRODUCT_NO NUMBER,
USER_ID VARCHAR2(40 BYTE),
CONSTRAINT FK_REVIEW_PRODUCT FOREIGN KEY (PRODUCT_NO)
REFERENCES TBL_PRODUCT (PRODUCT_NO) ON DELETE CASCADE,
CONSTRAINT FK_REVIEW_USER FOREIGN KEY (USER_ID)
REFERENCES TBL_USER (USER_ID) ON DELETE CASCADE
);

CREATE TABLE TBL_SUGGESTION
(
SUGGESTION_NO NUMBER PRIMARY KEY,
SUGGESTION_CONTENT VARCHAR2(2000 BYTE) NOT NULL,
PRODUCT_NO NUMBER,
USER_ID VARCHAR2(40 BYTE),
SUGGESTION_REG_DATE DATE DEFAULT SYSDATE,
SUGGESTION_UPD_DATE DATE DEFAULT SYSDATE,
CONSTRAINT FK_SUGGESTION_PRODUCT FOREIGN KEY (PRODUCT_NO)
REFERENCES TBL_PRODUCT (PRODUCT_NO),
CONSTRAINT FK_SUGGESTION_USER FOREIGN KEY (USER_ID)
REFERENCES TBL_USER (USER_ID)
);

CREATE SEQUENCE SEQ_PRODUCT;

CREATE SEQUENCE SEQ_REVIEW;

CREATE SEQUENCE SEQ_SUGGESTION ;

CREATE TABLE tbl_order (
    ono NUMBER PRIMARY KEY, -- 주문번호
    user_phone VARCHAR2(50), -- 전화번호
    user_name VARCHAR2(50),--이름
    address VARCHAR2(300), -- 주소 
    DELIVERY_CHARGE NUMBER default 0, --배송료
    pay_amount NUMBER(10, 2), -- 결제금액 (정밀도 10, 소수점 이하 2자리)
    order_date DATE DEFAULT SYSDATE, --결제날짜
    delivery_status VARCHAR2(50),-- 배송 상태
    user_id VARCHAR2(50) CONSTRAINT fk_order_user_id REFERENCES tbl_user(user_id), --아이디 구매자 ID 외래 키
    payment_state CHAR(1), --결제상태(0결제전, 1 결제후)
    payment_type VARCHAR2(20) DEFAULT '포인트', -- 결제방법 (포인트)
    sum_total number(30,0),-- 물건 합계가격
    delivery_number VARCHAR2(50)--배송 번호
);
create sequence seq_order_detail;


CREATE TABLE TBL_BOARD 
(
  BNO NUMBER(10, 0) NOT NULL 
, TITLE VARCHAR2(200 BYTE) NOT NULL 
, CONTENT VARCHAR2(4000 BYTE) NOT NULL 
, WRITER VARCHAR2(50 BYTE) NOT NULL 
, REGDATE DATE DEFAULT SYSDATE 
, UPDATEDATE DATE DEFAULT SYSDATE 
, CATEGORY VARCHAR2(200 BYTE) NOT NULL 
, THUMBNAIL VARCHAR2(4000 BYTE) 
, VIEW_COUNT NUMBER DEFAULT 0 
, CONSTRAINT SYS_C007030 PRIMARY KEY 
  (
    BNO 
  )
  USING INDEX 
  (
      CREATE UNIQUE INDEX SYS_C007030 ON TBL_BOARD (BNO ASC) 
      LOGGING 
      TABLESPACE SYSTEM 
      PCTFREE 10 
      INITRANS 2 
      STORAGE 
      ( 
        INITIAL 65536 
        NEXT 1048576 
        MINEXTENTS 1 
        MAXEXTENTS UNLIMITED 
        FREELISTS 1 
        FREELIST GROUPS 1 
        BUFFER_POOL DEFAULT 
      ) 
      NOPARALLEL 
  )
  ENABLE 
) 
LOGGING 
TABLESPACE SYSTEM 
PCTFREE 10 
PCTUSED 40 
INITRANS 1 
STORAGE 
( 
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1 
  MAXEXTENTS UNLIMITED 
  FREELISTS 1 
  FREELIST GROUPS 1 
  BUFFER_POOL DEFAULT 
) 
NOPARALLEL;